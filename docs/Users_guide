############################# Wi4MPI License ###########################
# `04/04/2016`                                                         #
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          #
#                                                                      #
# IDDN.FR.001.210022.000.S.P.2014.000.10800                            #
# This file is part of the Wi4MPI library.                             #
#                                                                      #
# This software is governed by the CeCILL-C license under French law   #
# and abiding by the rules of distribution of free software. You can   #
# use, modify and/ or redistribute the software under the terms of     #
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     #
# following URL http://www.cecill.info.                                #
#                                                                      #
# The fact that you are presently reading this means that you have     #
# had knowledge of the CeCILL-C license and that you accept its        #
# terms.                                                               #
#                                                                      #
# Authors:                                                             #
#   - Delforge Tony <tony.delforge.tgcc@cea.fr>                        #
#   - Ducrot Vincent <vincent.ducrot.tgcc@cea.fr>                      #
#                                                                      #
########################################################################



:Authors:
    Tony Delforge (tony.delforge.tgcc@cea.fr)
    Vincent Ducrot (vincent.ducrot.tgcc@cea.fr)

Developer Documentation
=======================

Contents
---------

1. Introduction
2. Building WI4MPI with CMake
	 1. Requirements 
   2. Quick start
	 3. WI4MPI specific variables 
3. WI4MPI usage:
	 1. Quick start
	 2. TGCC integration
	 3. Environment settings
4. Developers words 

------------

INTRODUCTION
============

MPI is a standard in HPC community which allows a simple use of clusters. Nowoaday, there are several implementation (OpenMPI, BullxMPI, MPT, IntelMPI, MPC, ...) each of which involves a specific ABI (Application Binary Interface) for an application compiled with a specific MPI implementation.
With wi4mpi, an application compiled with an alpha MPI implementation can be run under a beta MPI implementation without any compilation protocol and any concern about the ABI.

Building WI4MPI with CMake
==========================

Requirements
------------

WI4MPI required an OpenMPI (minimum version 1.8.8) as an MPI implementation for resolution symbol matter during conversion 

Quick start
-----------

The installation procedureis simply consists of a cmake make install sequence.

	1. Create a build directory: mkdir BUILD ; cd BUILD 
	2. Launch cmake initialisation and environment detection: cmake /path/to/wi4mpi/source/root 

		 CMake check if the required elements are presents before any attempt to build WI4MPI

	3. Build WI4MPI: make
	4. Install WI4MPI: cmake -DCMAKE_INSTALL_PREFIX=/path/wi4mpi-%version /path/to/wi4mpi/source/root && make install

WI4MPI specific variables
-------------------------

- WI4MPI_COMPILER:string
	
	Indicate which compilateur is used to compiled WI4MPI. Possible options: INTEL(default),GNU

- WI4MPI_REALEASE

	Indicate the WI4MPI state set for the installationi:
		- DEBUG: -DDEBUG is provided to activate some debug information. Useful for WI4MPI and apllications developer
		- NORMAL: -g is provided
		- REALEASE: -g is not provided


Both version (interface and preload) of wi4mpi are compiled into the CMAKE_INSTALL_PREFIX directory provided during the cmake initialisation.


WI4MPI usage:
=============

1. Quick start
2. TGCC integration
2. Environment settings




Developers words
================

First of all thanks a lot for using the wi4mpi software. Nevertheless be aware that this software is still under development and that some bugs may remain. If you encounter one of them, don't hesitate to contact one of the authors and so to participate to the software robustness.
Second, wi4mpi is compatible with the 3.1 MPI norm. Don't hesitate to participate :-)

